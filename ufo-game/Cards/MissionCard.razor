@using UfoGame.Cards.Components
@inject Model.Game Game;

<Card Title="Mission">
    <CardDataRow Text="Available in" 
                 Value="@(() => Game.PendingMission.AvailableIn)" 
                 Enabled="@(() => !Game.PendingMission.CurrentlyAvailable)"/>
    <CardDataRow Text="Expires in" 
                 Value="@(() => Game.PendingMission.ExpiresIn)"
                 Enabled="@(() => Game.PendingMission.CurrentlyAvailable)"/>
    <CardDataRow Text="Difficulty" 
                 Value="@(() => Game.PendingMission.Difficulty)"
                 Enabled="@(() => Game.PendingMission.CurrentlyAvailable)"/>
    <CardDataRow Text="Success chance" 
                 Value="@(() => Game.PendingMission.SuccessChance)"
                 Enabled="@(() => Game.PendingMission.CurrentlyAvailable)" />
    <CardDataRow Text="Soldiers to send" 
                 Value="@(() => Game.MissionPrep.SoldiersToSend)"
                 Enabled="@(() => Game.PendingMission.CurrentlyAvailable)" />
    <CardInput MaxValue="@(() => Game.Staff.CurrentSoldiers)"
                Enabled="@(() => Game.PendingMission.CurrentlyAvailable)" />
    <CardButton OnClick="Game.LaunchMission"
                Disabled="@(() => !Game.CanLaunchMission())">
        Launch mission with @Game.MissionPrep.SoldiersToSend soldiers
    </CardButton>
    <div class="row">
        <div class="col">Last mission debriefing:</div>
    </div>
    <div class="row">
        <div class="col">@Game.Archive.LastMissionReport</div>
    </div>
</Card>