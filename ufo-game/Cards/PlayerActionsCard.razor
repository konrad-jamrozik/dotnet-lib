@using UfoGame.Cards.Components
@using UfoGame.Model
@using System.Diagnostics.CodeAnalysis
@using UfoGame.Model.Data
@inject Timeline Timeline
@inject Research Research
@inject Accounting Accounting
@inject PendingMission PendingMission
@inject PlayerScore PlayerScore
@inject ViewModel.RaiseMoneyPlayerAction RaiseMoney
@inject ViewModel.DoNothingPlayerAction DoNothing

<Card Title="Actions">
    <CardDataRow Label="Current time" Value="Timeline.Data.CurrentTime" />
    <div class="row">
        <CardButton2 PlayerAction="RaiseMoney" />
        <CardButton Enabled="Research.CanResearchMoneyRaisingMethods()"
                    OnClick="Research.ResearchMoneyRaisingMethods">
            Research money raising methods for $@Research.Data.MoneyRaisingMethodsResearchCost
        </CardButton>
    </div>
    <div class="row">
        <CardButton Enabled="Research.CanResearchAgentEffectiveness()"
                    OnClick="Research.ResearchAgentEffectiveness">
            Research agent effectiveness for $@Research.Data.AgentEffectivenessResearchCost
        </CardButton>
        <CardButton Enabled="Research.CanResearchAgentSurvivability()"
                    OnClick="Research.ResearchAgentSurvivability">
            Research agent survivability for $@Research.Data.AgentSurvivabilityResearchCost
        </CardButton>
    </div>
    <div class="row">
        <CardButton Enabled="Research.CanResearchTransportCapacity()"
                    OnClick="Research.ResearchTransportCapacity">
            Increase transport capacity by @MissionPrepData.TransportCapacityImprovement for 
            $@Research.Data.TransportCapacityResearchCost
        </CardButton>
        <CardButton Enabled="Research.CanResearchAgentRecoverySpeed()"
                    OnClick="Research.ResearchAgentRecoverySpeed">
            Increase agent recovery speed by @StaffData.AgentRecoverySpeedImprovement for 
            $@Research.Data.AgentRecoverySpeedResearchCost
        </CardButton>
    </div>
    <div class="row">
        <CardButton2 PlayerAction="DoNothing" />
    </div>
    <div class="row mt-2 @(WarningMessagePresent ? "visible" : "invisible") ">
        <div class="col @(PlayerScore.PlayerWon ? "text-success": "text-danger")">
            @WarningMessage()
        </div>
    </div>
</Card>

@code
{
    private bool WarningMessagePresent => PlayerScore.GameOver || PendingMission.MissionAboutToExpire;

    private string WarningMessage()
    {
        if (PlayerScore.GameOver)
            return "GAME OVER! " 
                   + (PlayerScore.PlayerWon 
                       ? $"YOU WON! Score: {PlayerScore.Data.Value}. Turn: {Timeline.Data.CurrentTime}" 
                       : $"YOU LOST! Lasted until turn: {Timeline.Data.CurrentTime}.");
        else if (PendingMission.MissionAboutToExpire)
            return $"If you don't launch mission now, you will lose {PlayerScore.IgnoreMissionScoreLoss} score for ignoring pending mission!";
        else
            return "If you don't launch mission now, you will lose 1000 score for ignoring pending mission!";
    }

}
