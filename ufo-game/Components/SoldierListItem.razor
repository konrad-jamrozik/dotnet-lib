@using UfoGame.Cards.Components
@using UfoGame.Model
@inject Game Game

<div class="list-group-item list-group-item-action" aria-current="true">
    <div class="container-fluid">
        <div class="row">
            <div class="col col-auto me-auto">
                <div class="row">
                    <h5 class="ps-0 @NameTextColor">@Soldier.Nickname</h5>
                </div>
                <div class="row row-cols-auto">
                    <div class="col ps-0">Exp: @Soldier.ExperienceBonus(Game.Timeline.CurrentTime)</div>
                    <div class="col">Recovery: @Soldier.Recovery</div>
                </div>
            </div>
            <div class="col col-auto align-self-center d-flex justify-content-center">
                <button class="btn btn-primary" type="button" 
                        data-bs-toggle="collapse" data-bs-target="#soldierInfo_@Index" 
                        aria-expanded="false" aria-controls="soldierInfo_@Index">
                    i
                </button>
            </div>
            <div class="col col-auto px-0">
                <div class="d-flex flex-column align-items-center">
                    <div class="form-check form-switch ps-0">
                        <input class="form-check-input ms-0" type="checkbox" role="switch" 
                               id="flip_switch_@Index"
                               disabled="@(!Soldier.CanSendOnMission)"
                               @onchange="@(eventArgs => OnChangeSoldierMissionAssignment(eventArgs.Value!))" 
                               checked="@Soldier.AssignedToMission"/>
                    </div>
                    <label class="form-check-label" for="flip_switch_@Index">Send</label>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="collapse" id="soldierInfo_@Index">
    <Card Title="Soldier info">
        <CardDataRow Text="Id" Value="@Soldier.Id" />
        <CardDataRow Text="Salary" Value="@Soldier.Salary"/>
        <CardDataRow Text="Training time" Value="@Soldier.TrainingTime(Game.Timeline.CurrentTime)"/>
        <CardDataRow Text="Time hired" Value="@Soldier.TimeHired"/>
        <CardDataRow Text="Time employed" Value="@Soldier.TimeEmployed(Game.Timeline.CurrentTime)"/>
        <CardDataRow Text="Total missions" Value="@Soldier.TotalMissions"/>
        <CardDataRow Text="Successful missions" Value="@Soldier.SuccessfulMissions"/>
        <CardDataRow Text="Failed missions" Value="@Soldier.FailedMissions"/>
        <CardDataRow Text="Time spent recovering" Value="@Soldier.TimeSpentRecovering"/>
    @* kja add time spent in recovery *@
    </Card>
    @* kja button to fire soldier, with modal *@
</div>

@code 
{
    [Parameter, EditorRequired]
    public int Index { get; set; }

#nullable disable
    [Parameter, EditorRequired]
    public Soldier Soldier { get; set; }
#nullable enable

    private void OnChangeSoldierMissionAssignment(object eventArgsValue)
    {
        bool isChecked = (bool)eventArgsValue;
        if (isChecked)
            Soldier.AssignToMission();
        else
            Soldier.UnassignFromMission();
        Game.StateRefresh.Trigger();
    }

    private string NameTextColor
        => Soldier.IsRecovering ? "text-danger" : "";
}
